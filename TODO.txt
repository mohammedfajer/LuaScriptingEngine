

# Graphics Module
[x] Code `print` with optinonal and default paramters  
	[x] mo.graphics.print(text, x, y, [r], [sx], [sy], [ox], [oy], [kx], [ky])
	[x] mo.graphics.print(text, font, x, y, [r], [sx], [sy], [ox], [oy], [kx], [ky])
	[x] mo.graphics.print( text, transform )
	[x] mo.graphics.print( text, font, transform )
[] `printf` for text rendering with text alignment and text styling
	Wrapping + Alignment (Left, Right, Center, Justify)
	[] mo.graphics.printf(text, x, y, limit, align, [r], [sx], [sy], [ox], [oy], [kx], [ky])
	[] mo.graphics.printf(text, font, x, y, limit, align, [r], [sx], [sy], [ox], [oy], [kx], [ky])
	[] mo.graphics.printf(text, transform, limit, align)
	[] mo.graphics.printf(text, font, transform, limit, align)

[] Font needs to have getWidth, getHeight similar to love2d
[] Ensure `.draw` works fine for sprites (rotation, origin, scale, shear)
[] shapes library similar to love2d for rectangles, circles, convex shapes, points, polygons, vertex arrays, etc..
[] Play with default texture filtering (nearest and bilinear)
[] `clear` graphics window color
[] system for `setDrawColor` for all drawable objects
[] Global transformation state similar to push and pop
[] Scene Graph for parent child relationship rendering
[] Depth Layers and Sorting, Alpha blending


# Keyboard Module
[] Add isDown key function and register more keys

# Games Examples
[] Make Pong Game

# Architecture
[] Refactor code to modules
[] Unity Build, no oop bs

# Physics
[] Build interface to box2d also update to latest box2d
[] Pixel Perfect Collision

-------------------
# Systems
[] Resolution Indepedent Rendering LetterBoxing Interface
[] Integrate class.lua
[] 2D Cameras, Views, Viewports, Scrolling, Parallax Effect
[] Particles, Modifiers, Emitters
[] Shaders, VFXs
[] Tilemaps, Tilemap editor Tiled, Parsors, Auto Tiling

# Packages and Build
[] Build to Windows, Linux, MacOS, and Browser

# Learning Materials
[] AI, Path Finding
[] Procedural Generations
[] Shaders and VFXs
[] Documentations
[] Slides, Videos
[] Websites, Examples
[] More Game Examples

=================
# Optional
[] ImGUI Integration and Interface
[] Tilemap Editor
[] Particles Editor

# Things to learn later
[] Git submodules or fetchcontent


# Resources
https://gafferongames.com/post/fix_your_timestep/
https://www.iforce2d.net/b2dtut/collision-callbacks
https://github.com/SFML/SFML/wiki/Sources